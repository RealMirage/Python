'''
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

# List comprehension method
def solve(sequence):
    answer = sum([x for x in sequence if x % 2 == 0])
    print(answer)

def generate_sequence(upper_bound):
    sequence = [1,2]
    next_iterator = 3
    while next_iterator <= upper_bound:
        sequence += [next_iterator]
        next_iterator += sequence[-2]
    print(sequence)
    return sequence

if __name__ == '__main__':
    sqc = generate_sequence(4000000)
    solve(sqc)